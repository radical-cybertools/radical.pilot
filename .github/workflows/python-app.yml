# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ devel ]
  pull_request:
    branches: [ devel ]

jobs:
  test:

    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo
        ports:
        # will assign a random free host port
        - 27017/tcp

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6.13
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install . --upgrade
        pip install psutil
        pip install coverage
        pip install codecov
        pip install pytest
        pip install pytest-timeout
    - name: Test with pytest
      env:
        # use localhost for the host here because we are running the job on the VM.
        # If we were running the job on in a container this would be mongodb
        MONGODB_HOST: localhost
        MONGODB_PORT: ${{ job.services.mongodb.ports[27017] }} # get randomly assigned published port
        RADILCAL_PILOT_DBURL:  mongodb://localhost:${{ job.services.mongodb.ports[27017] }}/test
        LOC: /opt/hostedtoolcache/Python/3.6.13/x64/lib/python3.6/site-packages
      run: |
        coverage run --include=$LOC/radical/pilot/* -m pytest -ra --timeout=600 -vvv --showlocals tests/unit_tests/ tests/component_tests/
    - name: Codecov
      uses: codecov/codecov-action@v1.2.2


  flake8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install . --upgrade
        pip install flake8
        pip install flake8-per-file-ignores
    - name: Lint with flake8
      run: |
        LOG=`git log -n 1 | grep Merge`
        NEW=`echo $LOG | cut -d ' ' -f2`
        OLD=`echo $LOG | cut -d ' ' -f3`
        DIFF=`git diff  --name-only --diff-filter=db $NEW..$OLD`
        FILTERED=$(for f in $DIFF; do echo $f; done | grep -v '/archive/' | grep -e '\.py$' |  sed "s|^|$PWD/|")
        test -z "$FILTERED" && echo 'nothing to flake8' || flake8 $FILTERED

  pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install . --upgrade
        pip install psutil
        pip install coverage
        pip install codecov
        pip install pytest
        pip install pytest-timeout
        pip install PyGithub
        pip install pylint
    - name: Lint with pylint
      run: |
        LOG=`git log -n 1 | grep Merge`
        NEW=`echo $LOG | cut -d ' ' -f2`
        OLD=`echo $LOG | cut -d ' ' -f3`
        DIFF=`git diff  --name-only --diff-filter=db $NEW..$OLD`
        FILTERED=$(for f in $DIFF; do echo $f; done | grep -v '/archive/' | grep -e '\.py$' |  sed "s|^|$PWD/|")
        test -z "$FILTERED" && echo 'nothing to pylint' || pylint $FILTERED



