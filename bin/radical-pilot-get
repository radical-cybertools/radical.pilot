#!/usr/bin/env python

__copyright__ = "Copyright 2014-2016, http://radical.rutgers.edu"
__license__   = "MIT"


import sys
import time
import msgpack

import setproctitle  as spt
import radical.utils as ru

DELAY = 0.0


# ------------------------------------------------------------------------------
#
if __name__ == "__main__":
    '''
    This thin wrapper connects to a ZMQ communication bridge, receives all
    messages it finds on the bridge's queue, and prints them to stdout.  The
    argument specifies the bridge to connect to.  We expect to find
    a `$name.bridge.url` file in `$PWD`, from which we'll dig the bridge address
    to use.  It is the responsibility of the caller to ensure that the
    respective bridge exists.
    '''

    if len(sys.argv) != 2:
        sys.stderr.write('error: missing argument\n'
                         'usage: %s <queue> [...]\n\n' %  sys.argv[0])
        raise RuntimeError('missing argument')

    # setup getter
    name   = sys.argv[1]
    getter  = ru.Getter(name)

    # mark this process
    spt.setproctitle('rp.%s' % getter.uid)

    start = time.time()
    n     = 0
    work  = True
    while work:

        msgs = getter.get()
        sys.stdout.write('.')
        sys.stdout.flush()
        for msg in msgs:
            if msg.get('cmd') == 'QUIT':
                print '#'
                work = False

        n += 1

        time.sleep(DELAY)

    stop = time.time()
    print 'rate: %.2f msg/s' % ((n) / (stop - start))


# ------------------------------------------------------------------------------

