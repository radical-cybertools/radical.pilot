
# this is the default agent config which is used if no other config is
# specified for an agent.  It contains the minimal set of settings required for
# a functional pilot agent, without any component redundency.

# we should call this `pilot_config` instead of `agent_config`, since it 
# *contains* the agent layout for a pilot.

{
    # directory for staging files inside the agent sandbox
    # FIXME: should be a module define, not a config option
    "staging_area"         : "staging_area",

    # url schema to indicate the use of staging_area
    # FIXME: should be a module define, not a config option
    "staging_schema"       : "staging",

    # max number of cu out/err chars to push to db
    # FIXME: should be a module define, not a per-pilot config option
    "max_io_loglength"     : 1024,

    # max number of updates to put into a db bulk
    "bulk_collection_size" :  100,

    # max time period to collect db notifications into bulks (seconds)
    "bulk_collection_time" : 1.0,

    # time to sleep between database polls (seconds)
    "db_poll_sleeptime"    : 1.0,

    # agent_0 must always have target 'local' at this point
    # mode 'shared'   : local node is also used for CUs
    # mode 'reserved' : local node is reserved for the agent
    "target" : "local",
    "mode"   : "shared",

  # "agents"   : {
  #     "agent_1" : {
  #         "target"     : "local",
  #         "components" : {
  #             "AgentStagingInputComponent"  : {"count" : 1},
  #             "AgentSchedulingComponent"    : {"count" : 1},
  #             "AgentExecutingComponent"     : {"count" : 1},
  #             "AgentStagingOutputComponent" : {"count" : 1}
  #         }
  #     }
  # },


    # Bridges they are started by the session.
    #
    # Bridges can be configured to stall for a certain batch of messages,
    # releasing them then as bulks of a certain size.  Default for both
    # stall_hwm and batch_size is 1 (no stalling).  
    #
    "bridges" : {
        "agent_staging_input_queue" : {
            "log_level" : "error",
            "stall_hwm" : 1,
            "bulk_size" : 0
        },
        "agent_scheduling_queue" : {
            "log_level" : "error",
            "stall_hwm" : 1,
            "bulk_size" : 0
        },
        "agent_executing_queue" : {
            "log_level" : "error",
            "stall_hwm" : 1,
            "bulk_size" : 0
        },
        "agent_staging_output_queue" : {
            "log_level" : "error",
            "stall_hwm" : 1,
            "bulk_size" : 0
        },

        "agent_unschedule_pubsub" : {
            "log_level" : "error",
            "stall_hwm" : 1,
            "bulk_size" : 0
        },
        "agent_schedule_pubsub" : {
            "log_level" : "error",
            "stall_hwm" : 1,
            "bulk_size" : 0
        },
        "log_pubsub" : {
            "log_level" : "error",
            "stall_hwm" : 1,
            "bulk_size" : 0
        },
        "state_pubsub" : {
            "log_level" : "error",
            "stall_hwm" : 1,
            "bulk_size" : 0
        },
        "control_pubsub" : {
            "log_level" : "error",
            "stall_hwm" : 1,
            "bulk_size" : 0
        }
    },

    "components" : {
        # the update worker must live in agent_0, since only that agent is 
        # sure to have connectivity toward the DB.
        "UpdateWorker"                : {"count" : 1},
        "AgentStagingInputComponent"  : {"count" : 1},
        "AgentSchedulingComponent"    : {"count" : 1},
        "AgentExecutingComponent"     : {"count" : 1},
        "AgentStagingOutputComponent" : {"count" : 1}
    }
}

