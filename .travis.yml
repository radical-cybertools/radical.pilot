
language: python
python:   "3.6"
os:       linux
dist:     xenial

git:
  depth: 1

# safelist
branches:
  only:
  - devel

env:
  global:
    - CODECOV_TOKEN="c7e0d993-d31a-4d39-8ffa-07c30ea73e48"
    - COVERAGE=false
    - LOC=/home/travis/virtualenv/python3.6.7/lib/python3.6/site-packages
    - PYTEST="coverage run --include=$LOC/radical/pilot/* -m pytest -ra --timeout=600 -vvv --showlocals"
    
  jobs:
    - MAIN_CMD="$PYTEST tests/" COVERAGE=true
    - MAIN_CMD="ru-runcheck.sh flake8 diff"
    - MAIN_CMD="ru-runcheck.sh pylint diff"
    - MAIN_CMD="ru-runcheck.sh flake8 tests/ bin/"
    - MAIN_CMD="ru-runcheck.sh pylint tests/ bin/"
      #    - MAIN_CMD="ru-runcheck.sh flake8 tests/ bin/ examples/"
      #    - MAIN_CMD="ru-runcheck.sh pylint tests/ bin/ examples/"

jobs:
  include:
  - name: "Docker test"
    services:
      - docker
    install:
      - docker build -t rp-complete -f docker/rp-complete.dockerfile .
# Note: If we want to target specific branches, use something like the following, with corresponding updates in rp-complete.dockerfile
#      - echo TRAVIS_BRANCH is $TRAVIS_BRANCH
#      - RPREF=$TRAVIS_BRANCH
#      - (cd docker ; docker build -t rp-complete -f rp-complete.dockerfile --build-arg RPREF=${RPREF:-devel} .)
    script:
      - docker run --rm --name rp_test -d rp-complete
      - docker ps
      - sleep 5
      # Consider testing more examples, based on problem areas.
      - docker exec -ti -u rp rp_test bash -c "cd && . /home/rp/rp-venv/bin/activate && python radical.pilot/examples/00*"
# Ref issue #2218
#      - docker exec -ti -u rp rp_test bash -c "cd && . /home/rp/rp-venv/bin/activate && python radical.pilot/examples/misc/task_overlay.py radical.pilot/examples/misc/task_overlay.cfg"
      - docker kill rp_test

before_install:
  - uname -a
  - ulimit -a
  - python -V

# command to install dependencies
install:
  - pip install .
  - pip install coverage
  - pip install flake8
  - pip install flake8-per-file-ignores
  - pip install pycodestyle
  - pip install pylint
  - pip install codecov
  - pip install pytest
  - pip install pytest-timeout
  
before_script:
  - tmpLOC=`which python`
  - tmpLOC=(${tmpLOC///bin/ })
  - LOC=`find $tmpLOC/lib -name "site-packages"`
  - echo $tmpLOC
  - echo $LOC

script:
  - echo $MAIN_CMD
  - eval $MAIN_CMD

after_success:
  - |
    if [[ $COVERAGE == 'true' ]]; then \
      coverage combine; \
      coverage xml; \
      coverage report; \
      curl -s https://codecov.io/bash | bash
    fi

notifications:
  email:
    recipients: andre@merzky.net
    on_success: change
    on_failure: always

